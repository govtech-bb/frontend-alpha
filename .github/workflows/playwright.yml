name: Playwright Tests

on:
  push:
    branches: [dev, prod]
  pull_request:
    branches: [dev, prod]
  workflow_dispatch: # Allow manual trigger

env:
  NODE_VERSION: '20'
  PLAYWRIGHT_BASE_URL: 'http://localhost:3000'

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        # Fetch enough history for proper baseline comparison
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Build Next.js application
      run: npm run build

    # Check if Linux baselines exist
    - name: Check for Linux baselines
      id: check-baselines
      run: |
        if [ -d "tests/visual.spec.ts-snapshots" ] && [ "$(find tests/visual.spec.ts-snapshots -name '*-chromium-linux.png' | wc -l)" -gt 0 ]; then
          echo "linux_baselines_exist=true" >> $GITHUB_OUTPUT
          echo "✅ Linux baselines found"
          find tests/visual.spec.ts-snapshots -name '*-chromium-linux.png' | head -5
        else
          echo "linux_baselines_exist=false" >> $GITHUB_OUTPUT
          echo "❌ No Linux baselines found"
        fi
    
    # Generate Linux baselines if they don't exist
    - name: Generate Linux baselines
      if: steps.check-baselines.outputs.linux_baselines_exist == 'false'
      run: |
        echo "Generating Linux baselines..."
        npx playwright test visual.spec.ts --update-snapshots
        echo "Generated Linux baselines"
    
    # Commit the new baselines back to the PR branch
    - name: Commit Linux baselines
      if: steps.check-baselines.outputs.linux_baselines_exist == 'false'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add tests/**/*-snapshots/
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Add Linux visual regression baselines [skip ci]"
          git push
        fi

    # Run visual regression tests (FIXED: using correct variable name)
    - name: Run visual regression tests
      if: steps.check-baselines.outputs.linux_baselines_exist == 'true'
      run: |
        echo "Running visual regression tests with existing baselines..."
        npx playwright test visual.spec.ts --reporter=html
      env:
        CI: true
    
    # If no baselines existed and we generated them, run a basic smoke test
    - name: Run smoke test after baseline generation
      if: steps.check-baselines.outputs.linux_baselines_exist == 'false'
      run: |
        echo "Running smoke test after generating baselines..."
        npx playwright test visual.spec.ts --reporter=html
      env:
        CI: true
    
    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ github.run_id }}
        path: playwright-report/
        retention-days: 30
    
    - name: Upload test results and visual diffs
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-results-${{ github.run_id }}
        path: test-results/
        retention-days: 7

    # Add a step to show what actually ran
    - name: Test execution summary
      if: always()
      run: |
        echo "=== Test Execution Summary ==="
        echo "Linux baselines existed: ${{ steps.check-baselines.outputs.linux_baselines_exist }}"
        if [ "${{ steps.check-baselines.outputs.linux_baselines_exist }}" == "true" ]; then
          echo "✅ Ran visual regression tests with baseline comparison"
        else
          echo "ℹ️ Generated new baselines and ran smoke test"
        fi
        
        echo "=== Available snapshots after run ==="
        if [ -d "tests/visual.spec.ts-snapshots" ]; then
          find tests/visual.spec.ts-snapshots -name "*.png" | wc -l | xargs echo "Total snapshots:"
          find tests/visual.spec.ts-snapshots -name "*-chromium-linux.png" | head -10
        else
          echo "No snapshots directory found"
        fi